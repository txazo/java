Java内存模型:
主存 － CPU － 高速缓存

共享变量

缓存不一致:
1) 总线LOCK
2) 缓存一致性协议(写数据 － 信号通知 － 缓存行无效)

1. 原子性
2. 可见性
3. 有序性
    指令重排序

Java内存模型
1. 原子性
    1) 对基本数据类型的变量的读取和赋值操作是原子性操作
    2) synchronized Lock
2. 可见性
    1) volatile
    2) synchronized Lock
3. 有序性
    1) 指令重排序
    2) happens-before
    3) synchronized Lock

volatile
    1) 可见性
    2) 不保证原子性
    3) 禁止指令重排序，一定程度上保证有序性
    4) 内存屏障

内存屏障
    1) 禁止内存屏障前后的指令重排序
    2) 强制将对缓存的修改操作立即写入主存
    3) 写操作时，通知其它CPU对应的缓存行无效

CAS 乐观锁

synchronized 独占锁 悲观锁
    1) monitorenter monitorexit
    2) 无锁 － 偏向锁 － 轻量级锁 － 重量级锁


Lock
